{
  "contractName": "PositiveCheck",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_nombre",
          "type": "int256"
        }
      ],
      "name": "estPositif",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_nombre\",\"type\":\"int256\"}],\"name\":\"estPositif\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PositiveCheck.sol\":\"PositiveCheck\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/PositiveCheck.sol\":{\"keccak256\":\"0xb2acc147f3c165408976b4a8cd549158a7a66ab08eb5336fd52105c4c890f3cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec898ff2e5638221c5d0643f3890c2f4c66bff3bf709f4d4d260f5970dcdac13\",\"dweb:/ipfs/QmU5XaJS78DRxRTm88DFFbKhqEWFisf2CcRgizC5vR4uRM\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600e575f80fd5b50609b8061001b5f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c8063fa046abd14602a575b5f80fd5b603b6035366004604f565b5f131590565b604051901515815260200160405180910390f35b5f60208284031215605e575f80fd5b503591905056fea2646970667358221220a8934beb5aee3d5ed80cc07d22633fce7028e8ed7776b8535490a77e4cf850f364736f6c63430008140033",
  "deployedBytecode": "0x6080604052348015600e575f80fd5b50600436106026575f3560e01c8063fa046abd14602a575b5f80fd5b603b6035366004604f565b5f131590565b604051901515815260200160405180910390f35b5f60208284031215605e575f80fd5b503591905056fea2646970667358221220a8934beb5aee3d5ed80cc07d22633fce7028e8ed7776b8535490a77e4cf850f364736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:387:14",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:14",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:110:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "129:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "138:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "141:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "131:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "131:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "104:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "113:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "100:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "100:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "125:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "96:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:32:14"
                  },
                  "nodeType": "YulIf",
                  "src": "93:52:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "154:33:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "177:9:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "164:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "164:23:14"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "154:6:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "49:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "60:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "72:6:14",
                "type": ""
              }
            ],
            "src": "14:179:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "293:92:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "303:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "315:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "326:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "311:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "311:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "303:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "345:9:14"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "370:6:14"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "363:6:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "363:14:14"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "356:6:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "356:22:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "338:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "338:41:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "338:41:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "262:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "273:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "284:4:14",
                "type": ""
              }
            ],
            "src": "198:187:14"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n}",
      "id": 14,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "58:130:10:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "58:130:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;87:99;;;;;;:::i;:::-;144:4;-1:-1:-1;167:12:10;;87:99;;;;363:14:14;;356:22;338:41;;326:2;311:18;87:99:10;;;;;;;14:179:14;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;-1:-1:-1;164:23:14;;14:179;-1:-1:-1;14:179:14:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ncontract PositiveCheck {\n    function estPositif(int256 _nombre) public pure returns (bool) {\n        return _nombre >= 0;\n    }\n}",
  "sourcePath": "C:\\Users\\Haita\\Downloads\\blockchain\\TP3-dApp\\TP3-dApp\\contracts\\PositiveCheck.sol",
  "ast": {
    "absolutePath": "project:/contracts/PositiveCheck.sol",
    "exportedSymbols": {
      "PositiveCheck": [
        5233
      ]
    },
    "id": 5234,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5220,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:10"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PositiveCheck",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5233,
        "linearizedBaseContracts": [
          5233
        ],
        "name": "PositiveCheck",
        "nameLocation": "67:13:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5231,
              "nodeType": "Block",
              "src": "150:36:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 5229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5227,
                      "name": "_nombre",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5222,
                      "src": "167:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "178:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "167:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5226,
                  "id": 5230,
                  "nodeType": "Return",
                  "src": "160:19:10"
                }
              ]
            },
            "functionSelector": "fa046abd",
            "id": 5232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "estPositif",
            "nameLocation": "96:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5222,
                  "mutability": "mutable",
                  "name": "_nombre",
                  "nameLocation": "114:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "107:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 5221,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "107:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "106:16:10"
            },
            "returnParameters": {
              "id": 5226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5225,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "144:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5224,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "144:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "143:6:10"
            },
            "scope": 5233,
            "src": "87:99:10",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5234,
        "src": "58:130:10",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "33:155:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {
    "1753790991391": {
      "events": {},
      "links": {},
      "address": "0xC594f3c839F6Ec06be13bd1a6507Ecdf49126cA7",
      "transactionHash": "0x22456ab6f5b9812382617342f2b3e34966c06bf211daef16f77dd5f56a32c0e1"
    },
    "1753802931597": {
      "events": {},
      "links": {},
      "address": "0x006DE715e569F4DcBa7Da5708ff09f2B075c0565",
      "transactionHash": "0x10ffda3ef6984a6418148686fee2b184904bf6fb55f914114f30eaa00ff16ce8"
    },
    "1753875398909": {
      "events": {},
      "links": {},
      "address": "0xAf68a89238bFC8686088A771Beb8e47A2387D96a",
      "transactionHash": "0x292d569b8864d8f71a6f3014b63dfc35236e4d3a2b8c8b19de34d4345f58c5ce"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-07-30T11:40:31.814Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}