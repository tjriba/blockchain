{
  "contractName": "ParityCheck",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nombre",
          "type": "uint256"
        }
      ],
      "name": "estPair",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nombre\",\"type\":\"uint256\"}],\"name\":\"estPair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ParityCheck.sol\":\"ParityCheck\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ParityCheck.sol\":{\"keccak256\":\"0x4904b15a19bc0594d986a86dc67f0b6ad6c5553e475b83f0ee7d01424e26523d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eac431ada9ead17a1ba4105a9619a2d0773f914d6058832185c3ada1391e14bb\",\"dweb:/ipfs/QmTi1zKmgoCoQJwPMe26xqCkSPXQ1TA2Brc8mKvJfHKdCc\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561000f575f80fd5b5060c88061001c5f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c80631cee907f14602a575b5f80fd5b60396035366004605e565b604d565b604051901515815260200160405180910390f35b5f60576002836074565b1592915050565b5f60208284031215606d575f80fd5b5035919050565b5f82608d57634e487b7160e01b5f52601260045260245ffd5b50069056fea2646970667358221220e5b23c7b77618799c9dc238909096203580aca70cdf578e9dd9f87d69ed24f7e64736f6c63430008140033",
  "deployedBytecode": "0x6080604052348015600e575f80fd5b50600436106026575f3560e01c80631cee907f14602a575b5f80fd5b60396035366004605e565b604d565b604051901515815260200160405180910390f35b5f60576002836074565b1592915050565b5f60208284031215606d575f80fd5b5035919050565b5f82608d57634e487b7160e01b5f52601260045260245ffd5b50069056fea2646970667358221220e5b23c7b77618799c9dc238909096203580aca70cdf578e9dd9f87d69ed24f7e64736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:602:14",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:14",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:14"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:14"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:14",
                "type": ""
              }
            ],
            "src": "14:180:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "294:92:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "304:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "316:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "327:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "312:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "312:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "304:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "346:9:14"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "371:6:14"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "364:6:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "364:14:14"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "357:6:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "357:22:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "339:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "339:41:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "339:41:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "263:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "274:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "285:4:14",
                "type": ""
              }
            ],
            "src": "199:187:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "429:171:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "460:111:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "481:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "488:3:14",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "493:10:14",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "484:3:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "484:20:14"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "474:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "474:31:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "474:31:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "525:1:14",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "528:4:14",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "518:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "518:15:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "518:15:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "553:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "556:4:14",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "546:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "546:15:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "546:15:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "449:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "442:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "442:9:14"
                  },
                  "nodeType": "YulIf",
                  "src": "439:132:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "580:14:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "589:1:14"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "592:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "585:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "585:9:14"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "580:1:14"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "414:1:14",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "417:1:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "423:1:14",
                "type": ""
              }
            ],
            "src": "391:209:14"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n}",
      "id": 14,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "57:127:8:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "57:127:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;84:98;;;;;;:::i;:::-;;:::i;:::-;;;364:14:14;;357:22;339:41;;327:2;312:18;84:98:8;;;;;;;;136:4;159:11;169:1;159:7;:11;:::i;:::-;:16;;84:98;-1:-1:-1;;84:98:8:o;14:180:14:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:14;;14:180;-1:-1:-1;14:180:14:o;391:209::-;423:1;449;439:132;;493:10;488:3;484:20;481:1;474:31;528:4;525:1;518:15;556:4;553:1;546:15;439:132;-1:-1:-1;585:9:14;;391:209::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract ParityCheck {\n    function estPair(uint _nombre) public pure returns (bool) {\n        return _nombre % 2 == 0;\n    }\n}",
  "sourcePath": "C:\\Users\\Haita\\Downloads\\blockchain\\TP3-dApp\\TP3-dApp\\contracts\\ParityCheck.sol",
  "ast": {
    "absolutePath": "project:/contracts/ParityCheck.sol",
    "exportedSymbols": {
      "ParityCheck": [
        5163
      ]
    },
    "id": 5164,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5148,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ParityCheck",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5163,
        "linearizedBaseContracts": [
          5163
        ],
        "name": "ParityCheck",
        "nameLocation": "66:11:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5161,
              "nodeType": "Block",
              "src": "142:40:8",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5155,
                        "name": "_nombre",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5150,
                        "src": "159:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 5156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "169:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "159:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "174:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "159:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5154,
                  "id": 5160,
                  "nodeType": "Return",
                  "src": "152:23:8"
                }
              ]
            },
            "functionSelector": "1cee907f",
            "id": 5162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "estPair",
            "nameLocation": "93:7:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5150,
                  "mutability": "mutable",
                  "name": "_nombre",
                  "nameLocation": "106:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 5162,
                  "src": "101:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5149,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "101:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "100:14:8"
            },
            "returnParameters": {
              "id": 5154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5153,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5162,
                  "src": "136:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5152,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "136:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "135:6:8"
            },
            "scope": 5163,
            "src": "84:98:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5164,
        "src": "57:127:8",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "32:152:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {
    "1753790991391": {
      "events": {},
      "links": {},
      "address": "0x09feA39BcDeEc8706c511352d261808188E516a0",
      "transactionHash": "0xafb35e8a139a817ddfb4350b0ecec19a8eabf59866223c8fc2f016eb53c05965"
    },
    "1753802931597": {
      "events": {},
      "links": {},
      "address": "0xfb5dF618598d881104f8B0c349D5B1EBd424153f",
      "transactionHash": "0xa49693bb2d0226009fe74d4c3fa19430ff3965ff0ba5cc1488c361c59ec88f2a"
    },
    "1753875398909": {
      "events": {},
      "links": {},
      "address": "0x9F6306506667c106e396926adE6bb818000CCA27",
      "transactionHash": "0x5f246b2d28ba5cea332ae45050a5237d1b777c4627e97114175d04961f323247"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-07-30T11:40:31.818Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}